import 'dart:math';

import 'package:flutter/material.dart';

import 'package:glyph_studio/gen/assets.gen.dart';
import 'package:glyph_studio/models/glyph_set.dart';
import 'package:svg_path_parser/svg_path_parser.dart';

class GlyphPathPainter extends CustomPainter {
  final Path path;
  final Color color;

  GlyphPathPainter(this.path, this.color);

  @override
  void paint(Canvas canvas, Size size) {
    // Assume an original viewBox size - this should match your SVG's design
    const originalWidth = 424.0;
    const originalHeight = 926.0;

    // Calculate scale factors for width and height
    final scaleX = size.width / originalWidth;
    final scaleY = size.height / originalHeight;

    // Use the minimum scale to ensure aspect ratio preservation
    final scale = min(scaleX, scaleY);

    // Centering the canvas (if desired)
    final dx = (size.width - (originalWidth * scale)) / 2;
    final dy = (size.height - (originalHeight * scale)) / 2;
    canvas.translate(dx, dy);

    canvas.scale(scale, scale);

    // Setting up the paint
    final paint = Paint()
      ..color = color
      ..style = PaintingStyle.fill; // or stroke

    // Drawing the path with the applied transformations
    canvas.drawPath(path, paint);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return false;
  }

  @override
  bool? hitTest(Offset position) {
    return path.contains(position);
  }

  static int? checkTappedPath(
      List<String> svgPaths, Offset position, Size size) {
    for (int i = 0; i < svgPaths.length; i++) {
      Path path = parseSvgPath(svgPaths[
          i]); // Assuming this method scales and translates paths correctly
      // Add any necessary transformations to the path here to ensure it matches the painting scale/offset
      if (path.contains(position)) {
        return i; // Return the index of the tapped path
      }
    }
    return null; // No path was tapped
  }
}

class GlyphView extends StatelessWidget {
  final GlyphSet glyphSet;

  GlyphView({super.key, required this.glyphSet});

  // final paths = [
  //   "M206.034 892.193C209.9 892.193 213.034 895.327 213.034 899.193V908.855C213.034 912.721 209.9 915.855 206.034 915.855C202.168 915.855 199.034 912.721 199.034 908.855V899.193C199.034 895.327 202.168 892.193 206.034 892.193Z",
  //   "M206.034 759.826C209.9 759.826 213.034 762.96 213.034 766.826V869.242C213.034 873.108 209.9 876.242 206.034 876.242C202.168 876.242 199.034 873.108 199.034 869.242V766.826C199.034 762.96 202.168 759.826 206.034 759.826Z",
  //   "M129.371 222.039C156.635 212.707 187.053 209.038 207.022 209.101C233.23 209.185 264.444 214.699 293.562 225.035C305.95 229.432 318.023 234.724 329.217 240.887C355.179 255.181 372.338 271.842 396.624 295.423C397.511 296.284 398.408 297.154 399.314 298.034C402.089 300.727 402.155 305.158 399.463 307.933C396.771 310.707 392.339 310.774 389.565 308.081C388.847 307.385 388.137 306.696 387.435 306.014C362.669 281.974 346.752 266.523 322.464 253.151C312.016 247.398 300.647 242.405 288.879 238.228C261.104 228.369 231.456 223.18 206.978 223.101C188.354 223.042 159.507 226.521 133.905 235.285C114.03 242.087 107.134 245.867 95.4475 252.271C92.9137 253.66 90.1548 255.172 86.9895 256.864C86.7847 256.974 86.6167 257.066 86.4608 257.155C83.6189 258.777 61.6631 271.534 40.595 289.969C25.7381 302.968 18.5544 315.432 15.5418 321.859C14.4717 324.142 14 326.906 14 330.185V596.419C14 600.735 14.9366 604.999 16.7452 608.918C18.0373 611.717 19.7559 614.3 21.8395 616.573L28.5227 623.864L52.7206 648.896C54.7775 651.024 57.1112 652.865 59.6591 654.371L97.2455 676.581L131.838 693.012C133.905 693.994 136.07 694.759 138.295 695.293L153.79 699.012C156.312 699.617 158.897 699.923 161.491 699.923H240.915C243.509 699.923 246.093 699.617 248.616 699.012L267.733 694.423L312.237 677.512C314.097 676.805 315.888 675.932 317.59 674.903L352.478 653.808C354.429 652.628 356.253 651.249 357.92 649.694L381.098 628.061C382.617 626.643 383.999 625.084 385.225 623.407L393.454 612.146C397.681 606.362 399.911 599.36 399.807 592.197L398.068 472.242C398.012 468.376 401.101 465.197 404.966 465.141C408.832 465.085 412.011 468.173 412.067 472.039L413.805 591.994C413.953 602.196 410.777 612.168 404.758 620.406L396.529 631.667C394.782 634.057 392.814 636.276 390.65 638.296L367.472 659.928C365.098 662.144 362.501 664.108 359.722 665.788L324.834 686.883C322.41 688.349 319.858 689.593 317.21 690.599L271.87 707.828L251.883 712.625C248.291 713.487 244.609 713.923 240.915 713.923H161.491C157.797 713.923 154.115 713.487 150.523 712.625L135.028 708.906C131.858 708.145 128.776 707.057 125.831 705.658L90.6676 688.955L52.5369 666.424C48.9081 664.279 45.5842 661.657 42.6547 658.626L18.3277 633.46L11.5193 626.033C8.45767 622.693 5.93246 618.898 4.03372 614.784C1.37625 609.027 0 602.761 0 596.419V330.185C0 325.677 0.630802 320.684 2.86549 315.916C6.55982 308.036 14.8313 293.909 31.376 279.433C53.4786 260.093 76.368 246.796 79.5202 244.996C79.8289 244.82 80.1198 244.662 80.3867 244.519C83.4318 242.891 86.1294 241.412 88.6424 240.034C100.568 233.497 108.337 229.239 129.371 222.039Z",
  //   "M24.4993 8.5631C32.4181 2.99066 41.8647 0 51.5475 0H56.3831C67.3089 0 77.8932 3.80641 86.3166 10.7648L88.8527 12.8599C95.4601 18.3182 100.449 25.4793 103.281 33.5686L106.361 42.3687C107.638 46.0177 105.715 50.011 102.066 51.2882C98.4171 52.5653 94.4238 50.6426 93.1466 46.9936L90.0666 38.1935C88.0787 32.5138 84.5756 27.4858 79.9363 23.6533L77.4002 21.5583C71.486 16.6726 64.0544 14 56.3831 14H51.5475C44.7489 14 38.1162 16.0998 32.5562 20.0124L28.8111 22.6479C22.4266 27.1407 17.8416 33.7515 15.871 41.3056L15.0686 44.3813C14.3591 47.1011 14 49.9004 14 52.7112V145.805C14 148.605 14.3733 151.393 15.11 154.094C17.4258 162.585 23.188 169.72 31.0013 173.772L33.4473 175.04C38.141 177.474 43.3507 178.744 48.6378 178.744H57.59C64.6513 178.744 71.5264 176.479 77.2049 172.282L77.9821 171.707C83.7876 167.416 88.0259 161.34 90.0472 154.41L91.4336 149.656C92.3092 146.654 92.7536 143.543 92.7536 140.416V119.077C92.7536 115.211 95.8876 112.077 99.7536 112.077C103.62 112.077 106.754 115.211 106.754 119.077V140.416C106.754 144.87 106.121 149.301 104.874 153.576L103.487 158.329C100.608 168.2 94.5721 176.854 86.3036 182.966L85.5264 183.54C77.4388 189.518 67.647 192.744 57.59 192.744H48.6378C41.1077 192.744 33.6878 190.935 27.0029 187.468L24.5568 186.2C13.2712 180.348 4.94821 170.042 1.60333 157.778C0.539193 153.876 0 149.85 0 145.805V52.7112C0 48.7079 0.511469 44.7211 1.52199 40.8474L2.32436 37.7717C5.13101 27.0128 11.6611 17.5974 20.7542 11.1986L24.4993 8.5631Z",
  //   "M376.739 40.7094C379.69 43.2066 380.058 47.6235 377.561 50.5747L292.537 151.058C290.04 154.009 285.623 154.377 282.672 151.88C279.72 149.383 279.352 144.966 281.85 142.015L366.874 41.5315C369.371 38.5803 373.788 38.2122 376.739 40.7094Z"
  // ];

  final paths = [
    "M211.034 892.193C217.661 892.193 223.034 897.566 223.034 904.193V913.855C223.034 920.483 217.661 925.855 211.034 925.855C204.406 925.855 199.034 920.483 199.034 913.855V904.193C199.034 897.566 204.406 892.193 211.034 892.193Z",
    "M211.034 759.826C217.661 759.826 223.034 765.199 223.034 771.826V874.242C223.034 880.869 217.661 886.242 211.034 886.242C204.406 886.242 199.034 880.869 199.034 874.242V771.826C199.034 765.199 204.406 759.826 211.034 759.826Z",
    "M132.752 222.308C160.609 212.773 191.588 209.036 212.038 209.101C238.863 209.187 270.637 214.817 300.234 225.323C312.844 229.798 325.168 235.198 336.628 241.507C363.191 256.132 380.792 273.224 404.932 296.666C405.877 297.583 406.831 298.509 407.796 299.446C412.553 304.061 412.667 311.658 408.052 316.415C403.436 321.171 395.839 321.285 391.083 316.67C390.444 316.049 389.811 315.435 389.184 314.827C364.217 290.594 348.744 275.575 325.053 262.531C314.87 256.925 303.753 252.039 292.206 247.94C264.911 238.252 235.823 233.178 211.962 233.101C193.819 233.043 165.533 236.455 140.524 245.015C121.063 251.676 114.476 255.286 102.88 261.64C100.339 263.032 97.5578 264.556 94.3476 266.273C94.1651 266.371 94.0409 266.439 93.9396 266.497C91.2085 268.056 69.5862 280.62 48.8876 298.731C34.6334 311.204 27.8381 323.074 25.0691 328.981C24.4149 330.377 24 332.345 24 335.185V601.419C24 605.011 24.7796 608.561 26.285 611.822C27.3605 614.153 28.7909 616.302 30.5253 618.194L37.1635 625.436L61.3155 650.421C63.0608 652.226 65.0409 653.789 67.2028 655.066L104.595 677.161L138.983 693.496C140.737 694.329 142.574 694.978 144.462 695.431L159.957 699.15C162.097 699.663 164.29 699.923 166.491 699.923H245.915C248.115 699.923 250.309 699.663 252.449 699.15L271.256 694.636L315.461 677.838C317.039 677.238 318.559 676.498 320.003 675.624L354.891 654.529C356.546 653.528 358.094 652.358 359.508 651.038L382.686 629.406C383.975 628.202 385.148 626.88 386.188 625.456L394.417 614.196C398.004 609.288 399.895 603.347 399.807 597.269L398.069 477.314C397.973 470.687 403.267 465.237 409.894 465.141C416.52 465.045 421.97 470.34 422.066 476.966L423.805 596.922C423.968 608.208 420.455 619.242 413.795 628.356L405.566 639.617C403.633 642.261 401.456 644.716 399.062 646.951L375.884 668.584C373.257 671.035 370.383 673.208 367.309 675.067L332.421 696.162C329.739 697.784 326.916 699.159 323.986 700.273L278.348 717.615L258.05 722.487C254.075 723.441 250.002 723.923 245.915 723.923H166.491C162.404 723.923 158.331 723.441 154.356 722.487L138.861 718.768C135.354 717.926 131.944 716.722 128.686 715.174L93.3183 698.375L54.9933 675.728C50.9784 673.356 47.301 670.454 44.0598 667.101L19.6867 641.888L12.8336 634.412C9.42259 630.691 6.60928 626.463 4.49393 621.88C1.53326 615.465 0 608.484 0 601.419V335.185C0 330.238 0.68762 324.449 3.33824 318.794C7.27605 310.394 15.936 295.674 33.0835 280.67C55.5556 261.007 78.7784 247.517 82.0414 245.654C82.4047 245.447 82.7394 245.265 83.0286 245.11C86.0327 243.504 88.7088 242.036 91.2141 240.663C103.22 234.081 111.303 229.65 132.752 222.308Z",
    "M26.6219 9.47407C35.383 3.30881 45.8346 0 56.5475 0H61.3831C73.4712 0 85.1816 4.21134 94.501 11.91L97.0371 14.005C104.347 20.0441 109.867 27.967 113 36.9168L116.08 45.717C118.269 51.9723 114.973 58.8181 108.718 61.0075C102.462 63.1968 95.6167 59.9007 93.4273 53.6454L90.3473 44.8452C88.6606 40.0261 85.6883 35.7599 81.7519 32.5081L79.2158 30.4131C74.1977 26.2676 67.8921 24 61.3831 24H56.5475C50.779 24 45.1513 25.7817 40.4337 29.1014L36.6886 31.7369C31.2714 35.549 27.3811 41.1582 25.7091 47.5677L24.9067 50.6434C24.3047 52.9511 24 55.3263 24 57.7112V150.805C24 153.161 24.314 155.506 24.9338 157.778C26.882 164.922 31.7297 170.924 38.3028 174.333L40.7489 175.601C44.7314 177.666 49.1518 178.744 53.6378 178.744H62.59C68.5814 178.744 74.4148 176.822 79.233 173.261L80.0102 172.686C84.9361 169.046 88.5321 163.89 90.2472 158.01L91.6336 153.256C92.3765 150.709 92.7536 148.069 92.7536 145.416V124.077C92.7536 117.45 98.1262 112.077 104.754 112.077C111.381 112.077 116.754 117.45 116.754 124.077V145.416C116.754 150.344 116.053 155.246 114.674 159.976L113.287 164.73C110.102 175.65 103.424 185.225 94.2756 191.987L93.4983 192.561C84.5504 199.175 73.7169 202.744 62.59 202.744H53.6378C45.3066 202.744 37.0974 200.742 29.7013 196.907L27.2552 195.639C14.7295 189.144 5.49194 177.706 1.77951 164.093C0.598442 159.763 0 155.294 0 150.805V57.7112C0 53.2821 0.565881 48.871 1.6839 44.5853L2.48627 41.5095C5.5915 29.6062 12.8163 19.1891 22.8767 12.1095L26.6219 9.47407Z",
    "M384.969 41.8926C390.028 46.1735 390.659 53.7453 386.378 58.8045L301.354 159.288C297.073 164.347 289.501 164.978 284.442 160.697C279.383 156.416 278.752 148.844 283.033 143.785L368.057 43.3019C372.338 38.2426 379.909 37.6117 384.969 41.8926Z"
  ];

  @override
  Widget build(BuildContext context) {
    return Center(
      child: LayoutBuilder(builder: (context, constraints) {
        return Stack(
          children: paths.map((p) {
            var parsedPath = parseSvgPath(p);

            return CustomPaint(
              size: Size(constraints.maxWidth, constraints.maxHeight),
              painter: GlyphPathPainter(parsedPath, Colors.blue),
            );
          }).toList(),
        );
      }),
    );
  }
}
